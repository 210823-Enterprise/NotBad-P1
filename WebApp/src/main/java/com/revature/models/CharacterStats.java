package com.revature.models;

import java.util.LinkedList;
import java.util.List;
import java.util.Objects;

import com.revature.annotations.Column;
import com.revature.annotations.Entity;
import com.revature.annotations.Id;
import com.revature.minigame.models.Position;

@Entity(tableName="team4.character_statistics")
public class CharacterStats {
	
	@Id(autoGenerated = true, columnName = "id")
	private int id;

	@Column(columnName="character_level", nullable=false, unique = false)
	private int characterLevel;

	@Column(columnName="exp", nullable=false, unique = false)
	private int exp;
	
	@Column(columnName="health", nullable=false, unique = false)
	private int health;
	
	@Column(columnName="mana", nullable=false, unique = false)
	private int mana;
	
	@Column(columnName="stamina", nullable=false, unique = false)
	private int stamina;
	
	private final List<String> statusEffects;
	private Position pos;

	public CharacterStats() {
		super();
		this.statusEffects = new LinkedList<String>();
	}

	public CharacterStats(final int id, final int characterLevel) {
		super();
		this.id = id;
		this.characterLevel = characterLevel;
		this.health = maxHealth();
		this.mana = maxMana();
		this.stamina = maxStamina();
		this.statusEffects = new LinkedList<String>();
	}

	public CharacterStats(final int characterLevel) {
		super();
		this.id = -1;
		this.characterLevel = characterLevel;
		this.health = maxHealth();
		this.mana = maxMana();
		this.stamina = maxStamina();
		this.statusEffects = new LinkedList<String>();
	}

	public CharacterStats(final int characterLevel, final int health, final int mana, final int stamina) {
		super();
		this.id = -1;
		this.characterLevel = characterLevel;
		this.health = health;
		this.mana = mana;
		this.stamina = stamina;
		this.statusEffects = new LinkedList<String>();
	}

	public CharacterStats(final int id, final int characterLevel, final int health, final int mana, final int stamina) {
		super();
		this.id = id;
		this.characterLevel = characterLevel;
		this.health = health;
		this.mana = mana;
		this.stamina = stamina;
		this.statusEffects = new LinkedList<String>();
	}

	public int getId() {
		return this.id;
	}

	public int getExp() {
		return this.exp;
	}

	public int getCharacterLevel() {
		return this.characterLevel;
	}

	public void setCharacterLevel(final int characterLevel) {
		this.characterLevel = characterLevel;
	}

	public int getHealth() {
		return this.health;
	}

	public int getStamina() {
		return this.stamina;
	}

	public int getMana() {
		return this.mana;
	}

	public Position getPos() {
		return this.pos;
	}
	
	public void addEffect(final String string) {
		this.statusEffects.add(string);
	}

	public void setId(final int id) {
		this.id = id;
	}

	public boolean modifyExp(final int exp) {
		this.exp += exp;
		if(this.exp >= levelupExp()) {
			this.exp -= levelupExp();
			levelUp();
			return true;
		}
		if(this.exp < 0)
			this.exp = 0;
		return false;
	}

	public void modifyHealth(final int health) {
		this.health += health;
		if(this.health > maxHealth())
			this.health = maxHealth();
		if(this.health < 0)
			this.health = 0;
	}

	public void modifyMana(final int mana) {
		this.mana += mana;
		if(this.mana > maxMana())
			this.mana = maxMana();
		if(this.mana < 0)
			this.mana = 0;
	}

	public void modifyStamina(final int stamina) {
		this.stamina += stamina;
		if(this.stamina > maxStamina())
			this.stamina = maxStamina();
		if(this.stamina < 0)
			this.stamina = 0;
	}
	
	public void levelUp() {
		final int maxHealth = maxHealth();
		this.characterLevel++;
		modifyHealth(this.health + maxHealth() - maxHealth);
	}
	
	public List<String> getEffects() {
		return this.statusEffects;
	}
	
	public void setPos(final Position pos) {
		this.pos = pos;
	}

	public void movePos(final int i, final int j) {
		this.pos = this.pos.transform(i, j);
	}	

	public int maxHealth() {
		return 90 + (10*this.characterLevel);
	}

	public int maxMana() {
		return 45 + (5*this.characterLevel);
	}

	public int maxStamina() {
		return 45 + (5*this.characterLevel);
	}

	private int levelupExp() {
		return (this.characterLevel * 2) - 1;
	}

	@Override
	public int hashCode() {
		return Objects.hash(this.characterLevel, this.health, this.id, this.mana, this.stamina);
	}

	@Override
	public boolean equals(final Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		final CharacterStats other = (CharacterStats) obj;
		return this.characterLevel == other.characterLevel && this.health == other.health && this.id == other.id && this.mana == other.mana
				&& this.stamina == other.stamina;
	}

	@Override
	public String toString() {
		return "CharacterStats [id=" + this.id + ", characterLevel=" + this.characterLevel + ", health=" + this.health + ", mana="
				+ this.mana + ", stamina=" + this.stamina + "]";
	}
	
}
